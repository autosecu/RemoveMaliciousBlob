{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Remove-Malware-From-Blob-Storage",
            "type":  "string"
        }
    },
    "variables":  {
        "AzureblobConnectionName":  "[concat('Azureblob-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Delete_blob_(V2)":  {
                            "runAfter":  {
                                "Set_File_Name":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "headers":  {
                                    "SkipDeleteIfFileNotFoundOnServer":  false
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azureblob_3']['connectionId']"
                                    }
                                },
                                "method":  "delete",
                                "path":  "/v2/datasets/@{encodeURIComponent(encodeURIComponent(variables('StorageAccountName')))}/files/@{encodeURIComponent(encodeURIComponent(variables('FileName')))}"
                            }
                        },
                        "Initialize_Variable_{FileName}":  {
                            "runAfter":  {
                                "Initialize_Variable_{StorageAccountName}":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "FileName",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Variable_{StorageAccountName}":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "StorageAccountName",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Parse_Entities":  {
                            "runAfter":  {
                                "Initialize_Variable_{FileName}":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "schema":  {
                                    "items":  {
                                        "properties":  {
                                            "id":  {
                                                "type":  "string"
                                            },
                                            "kind":  {
                                                "type":  "string"
                                            },
                                            "name":  {
                                                "type":  "string"
                                            },
                                            "properties":  {
                                                "properties":  {
                                                    "address":  {
                                                        "type":  "string"
                                                    },
                                                    "friendlyName":  {
                                                        "type":  "string"
                                                    }
                                                },
                                                "type":  "object"
                                            },
                                            "type":  {
                                                "type":  "string"
                                            }
                                        },
                                        "required":  [
                                            "id",
                                            "name",
                                            "type",
                                            "kind",
                                            "properties"
                                        ],
                                        "type":  "object"
                                    },
                                    "type":  "array"
                                }
                            }
                        },
                        "Set_File_Name":  {
                            "foreach":  "@body('Parse_Entities')",
                            "actions":  {
                                "Condition_2":  {
                                    "actions":  {
                                        "Set_variable_2":  {
                                            "runAfter":  {
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "FileName",
                                                "value":  "/@{items('Set_File_Name')?['properties']?['directory']}/@{items('Set_File_Name')?['properties']?['friendlyName']}"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "equals":  [
                                                    "@items('Set_File_Name')['kind']",
                                                    "File"
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                }
                            },
                            "runAfter":  {
                                "Set_Storage_Account_Name":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach",
                            "runtimeConfiguration":  {
                                "concurrency":  {
                                    "repetitions":  1
                                }
                            }
                        },
                        "Set_Storage_Account_Name":  {
                            "foreach":  "@body('Parse_Entities')",
                            "actions":  {
                                "Condition":  {
                                    "actions":  {
                                        "Set_variable":  {
                                            "runAfter":  {
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "StorageAccountName",
                                                "value":  "@items('Set_Storage_Account_Name')?['properties']?['friendlyName']"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "equals":  [
                                                    "@items('Set_Storage_Account_Name')['kind']",
                                                    "AzureResource"
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                }
                            },
                            "runAfter":  {
                                "Parse_Entities":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach",
                            "runtimeConfiguration":  {
                                "concurrency":  {
                                    "repetitions":  1
                                }
                            }
                        },
                        "Update_incident":  {
                            "runAfter":  {
                                "Delete_blob_(V2)":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "classification":  {
                                        "ClassificationAndReason":  "TruePositive - SuspiciousActivity",
                                        "ClassificationReasonText":  "Automated Deletion of File"
                                    },
                                    "incidentArmId":  "@triggerBody()?['object']?['id']",
                                    "owner":  "jeffdaniels@nullsendcyber.onmicrosoft.com",
                                    "ownerAction":  "Assign",
                                    "severity":  "High",
                                    "status":  "Closed",
                                    "tagsToAdd":  {
                                        "TagsToAdd":  [
                                            {
                                                "Tag":  "Automation Closed"
                                            }
                                        ]
                                    }
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "put",
                                "path":  "/Incidents"
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azureblob_3":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzureblobConnectionName'))]",
                                "connectionName":  "[variables('AzureblobConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureblob')]"
                            },
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AzureblobConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzureblobConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzureblobConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azureblob')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        }
    ]
}
